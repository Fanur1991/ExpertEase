stages:
  - build
  - test
  - deploy

build_job:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache git
    - docker info
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
    CI_REGISTRY_IMAGE: "your-registry-image-name"
    CI_COMMIT_REF_SLUG: "main"
  script:
    - echo "Running build"
#    - docker build -t frontend-image .
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

# disabled
.test_job:
  stage: test
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - echo "Running tests"
    - docker run --name frontend-container -d frontend-image
    - docker exec frontend-container npm test --passWithNoTests
    - docker stop frontend-container
    - docker rm frontend-container

deploy_job:
  stage: deploy
  variables:
    KUBE_CONFIG: ${KUBE_CONFIG}
  script:
    - echo "Deploying to Kubernetes"
    - kubectl --kubeconfig $KUBE_CONFIG apply -f deployment.yaml
    - kubectl --kubeconfig $KUBE_CONFIG apply -f service.yaml
    - kubectl set image deployment/your-deployment-name your-container-name=$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG --record

cache:
  paths:
    - /cache
